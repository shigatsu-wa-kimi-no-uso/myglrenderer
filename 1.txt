# CMakeList.txt: 顶层 CMake 项目文件，在此处执行全局配置
# 并包含子项目。
#
cmake_minimum_required (VERSION 3.8)
project(myglrenderer_top)

# Enable Hot Reload for MSVC compilers if supported.
if (POLICY CMP0141)
  cmake_policy(SET CMP0141 NEW)
  set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "$<IF:$<AND:$<C_COMPILER_ID:MSVC>,$<CXX_COMPILER_ID:MSVC>>,$<$<CONFIG:Debug,RelWithDebInfo>:EditAndContinue>,$<$<CONFIG:Debug,RelWithDebInfo>:ProgramDatabase>>")
endif()

find_package(OpenGL REQUIRED)
find_package(glm CONFIG REQUIRED)

set(GLFW_DIR "C:/OpenGL/glfw-3.4")
set(GLFW_LIB_DIR "${GLFW_DIR}/lib")
set(GLFW_INCLUDE_DIR "${GLFW_DIR}/include")

set(GLAD_DIR "C:/OpenGL/glad-4.6")
set(GLAD_INCLUDE_DIR "${GLAD_DIR}/${CMAKE_BUILD_TYPE}/include")
set(GLAD_SRC_DIR "${GLAD_DIR}/${CMAKE_BUILD_TYPE}/src")

if(CMAKE_CL_64)
	set(CURRENT_PLATFORM "x64")
else()
	set(CURRENT_PLATFORM "Win32")
endif()

message(STATUS "Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Platform: ${CURRENT_PLATFORM}")
set(GLFW_LIB_PATH "${GLFW_LIB_DIR}/${CURRENT_PLATFORM}/${CMAKE_BUILD_TYPE}/glfw3.lib")
include_directories(${GLFW_INCLUDE_DIR})
include_directories(${GLAD_INCLUDE_DIR})
include_directories(${GLAD_SRC_DIR})
link_libraries(${GLFW_LIB_PATH})
link_libraries(glm::glm)
message("glfw lib linked: ${GLFW_LIB_PATH}")
message("glfw header directory included: ${GLFW_INCLUDE_DIR}")
message("glad header directory included: ${GLAD_INCLUDE_DIR}")
message("glad source directory included: ${GLAD_SRC_DIR}")

# 包含子项目。
add_subdirectory("myglrenderer")
